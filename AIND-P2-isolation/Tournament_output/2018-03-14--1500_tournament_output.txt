/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-14--1218_overnight_tournament_output.txt

b9ac6f2c7edc:/opt/conda/bin/python -u /opt/.pycharm_helpers/
profiler/run_profiler.py 172.17.0.1 42375 
/opt/project/AIND-P2-isolation/AIND-Isolation-master/tournament.py

Starting cProfile profiler


This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************
  -My score-"name"                   Combined      Move-diff     in-out

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      45  |   5    45  |   5    45  |   5    47  |   3  
    2       MM_Open     38  |  12    32  |  18    36  |  14    35  |  15  
    3      MM_Center    42  |   8    40  |  10    45  |   5    40  |  10  
    4     MM_Improved   33  |  17    36  |  14    37  |  13    35  |  15  
    5       AB_Open     24  |  26    22  |  28    30  |  20    24  |  26  
    6      AB_Center    24  |  26    32  |  18    32  |  18    27  |  23  
    7     AB_Improved   25  |  25    22  |  28    28  |  22    23  |  27  
--------------------------------------------------------------------------
           Win Rate:      66.0%        65.4%        72.3%        66.0%    
Snapshot saved to /tmp/notebooks.pstat

Process finished with exit code 0

*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-14--1500_tournament_output.txt

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************
  -My score-"name"                   Move-diff    Combined      in-out

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      94  |   6    90  |  10    92  |   8    94  |   6  
    2       MM_Open     69  |  31    66  |  34    68  |  32    75  |  25  
    3      MM_Center    87  |  13    87  |  13    84  |  16    88  |  12  
    4     MM_Improved   74  |  26    68  |  32    69  |  31    65  |  35  
    5       AB_Open     58  |  42    56  |  44    53  |  47    50  |  50  
    6      AB_Center    61  |  39    61  |  39    61  |  39    50  |  50  
    7     AB_Improved   53  |  47    50  |  50    54  |  46    43  |  57  
--------------------------------------------------------------------------
           Win Rate:      70.9%        68.3%        68.7%        66.4%    


Process finished with exit code 0

*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-14--1746_tournament_output.txt

# python tournament.py

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************
                             Playing Matches
                        *************************
  -My score-"name"                   Move-diff    Combined	in-out

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost
    1       Random      90  |  10    90  |  10    95  |   5    94  |   6
    2       MM_Open     70  |  30    76  |  24    66  |  34    70  |  30
    3      MM_Center    91  |   9    84  |  16    85  |  15    87  |  13
    4     MM_Improved   74  |  26    66  |  34    74  |  26    72  |  28
    5       AB_Open     56  |  44    52  |  48    44  |  56    45  |  55
    6      AB_Center    50  |  50    62  |  38    53  |  47    49  |  51
    7     AB_Improved   46  |  54    51  |  49    52  |  48    47  |  53
--------------------------------------------------------------------------
           Win Rate:      68.1%        68.7%        67.0%        66.3%

#


*****************************************************************************
/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-15--0904_overnight_tournament_output.txt

f8b70fe7bcce:/opt/conda/bin/python -u /opt/.pycharm_helpers/profiler
/run_profiler.py 172.17.0.1 34873 
/opt/project/AIND-P2-isolation/AIND-Isolation-master/tournament.py
Starting cProfile profiler


This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      66  |   4    65  |   5    67  |   3    64  |   6  
    2       MM_Open     49  |  21    52  |  18    55  |  15    47  |  23  
    3      MM_Center    62  |   8    63  |   7    65  |   5    59  |  11  
    4     MM_Improved   48  |  22    51  |  19    48  |  22    44  |  26  
    5       AB_Open     36  |  34    38  |  32    35  |  35    33  |  37  
    6      AB_Center    39  |  31    39  |  31    38  |  32    36  |  34  
    7     AB_Improved   39  |  31    35  |  35    36  |  34    31  |  39  
--------------------------------------------------------------------------
           Win Rate:      69.2%        70.0%        70.2%        64.1%    

Snapshot saved to /tmp/notebooks.pstat
Traceback (most recent call last):
  File "/opt/.pycharm_helpers/profiler/run_profiler.py", line 173, in <module>
    profiler.run(file)
  File "/opt/.pycharm_helpers/profiler/run_profiler.py", line 92, in run
    self.save_snapshot(0, generate_snapshot_filepath(base_snapshot_path, 
remote_run, self.snapshot_extension()), remote_run)
  File "/opt/.pycharm_helpers/profiler/run_profiler.py", line 138, in save_snapshot
    self.writer.addCommand(response)
  File "/opt/.pycharm_helpers/profiler/prof_io.py", line 60, in addCommand
    send_message(self.sock, message)
  File "/opt/.pycharm_helpers/profiler/prof_io.py", line 16, in send_message
    s = serialize(message, TBinaryProtocolFactory())
  File "/opt/.pycharm_helpers/profiler/_prof_imports.py", line 26, in serialize
    thrift_object.write(protocol)
  File "/opt/.pycharm_helpers/profiler/thriftpy/thrift.py", line 115, in write
    oprot.write_struct(self)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 389, in write_struct
    write_val(self.trans, TType.STRUCT, obj)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 159, in write_val
    write_val(outbuf, f_type, v, f_container_spec)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 159, in write_val
    write_val(outbuf, f_type, v, f_container_spec)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 125, in write_val
    write_val(outbuf, e_type, e_val, t_spec)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 159, in write_val
    write_val(outbuf, f_type, v, f_container_spec)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 159, in write_val
    write_val(outbuf, f_type, v, f_container_spec)
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 103, in write_val
    outbuf.write(pack_i32(val))
  File "/opt/.pycharm_helpers/profiler/thriftpy/protocol/binary.py", 
line 27, in pack_i32
    return struct.pack("!i", i32)
struct.error: 'i' format requires -2147483648 <= number <= 2147483647

Process finished with exit code 1

*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-16--1722_overnight_tournament_output.txt

e9142391cb10:/opt/conda/bin/python -u /opt/project/AIND-P2-isolation/
AIND-Isolation-master/tournament.py

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************

 ( -My score-"name"                  Move-diff    Combined      in-out  )

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_2  AB_Custom_3 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      141 |   9    140 |  10    142 |   8    141 |   9  
    2       MM_Open     111 |  39    107 |  43    114 |  36    111 |  39  
    3      MM_Center    126 |  24    126 |  24    127 |  23    123 |  27  
    4     MM_Improved   107 |  43    110 |  40    113 |  37    95  |  55  
    5       AB_Open     83  |  67    80  |  70    75  |  75    69  |  81  
    6      AB_Center    90  |  60    89  |  61    76  |  74    80  |  70  
    7     AB_Improved   76  |  74    66  |  84    70  |  80    64  |  86  
--------------------------------------------------------------------------
           Win Rate:      69.9%        68.4%        68.3%        65.0%    

Process finished with exit code 0


*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-18--0314_tournament_output_wth_sc_names.txt

root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master

# python tournament.py  

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved  Combined_sc Move_diff sc in_or_out sc 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      19  |   1    20  |   0    17  |   3    17  |   3  
    2       MM_Open     16  |   4    18  |   2    11  |   9    10  |  10  
    3      MM_Center    18  |   2    20  |   0    18  |   2    15  |   5  
    4     MM_Improved   15  |   5    14  |   6    14  |   6    14  |   6  
    5       AB_Open     10  |  10    13  |   7     8  |  12     8  |  12  
    6      AB_Center    13  |   7    12  |   8    13  |   7    10  |  10  
    7     AB_Improved   10  |  10     8  |  12    10  |  10     7  |  13  
--------------------------------------------------------------------------
           Win Rate:      72.1%        75.0%        65.0%        57.9%    


Process finished with exit code 0



*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-19--1914_tournament_output_wth_sc_names.txt

root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master

# python tournament.py  

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved  Combined_sc Move_diff sc in_or_out sc 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      19  |   1    20  |   0    17  |   3    17  |   3  
    2       MM_Open     16  |   4    18  |   2    11  |   9    10  |  10  
    3      MM_Center    18  |   2    20  |   0    18  |   2    15  |   5  
    4     MM_Improved   15  |   5    14  |   6    14  |   6    14  |   6  
    5       AB_Open     10  |  10    13  |   7     8  |  12     8  |  12  
    6      AB_Center    13  |   7    12  |   8    13  |   7    10  |  10  
    7     AB_Improved   10  |  10     8  |  12    10  |  10     7  |  13  
--------------------------------------------------------------------------
           Win Rate:      72.1%        75.0%        65.0%        57.9%  


Process finished with exit code 0



*****************************************************************************

/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-19--2350_tour_combined_2000_10000_500.txt

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   Comb2000     Comb10000    Comb_500   
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      48  |   2    46  |   4    46  |   4    45  |   5  
    2       MM_Open     41  |   9    36  |  14    40  |  10    36  |  14  
    3      MM_Center    45  |   5    42  |   8    45  |   5    43  |   7  
    4     MM_Improved   41  |   9    34  |  16    34  |  16    35  |  15  
    5       AB_Open     29  |  21    29  |  21    24  |  26    26  |  24  
    6      AB_Center    29  |  21    31  |  19    25  |  25    25  |  25  
    7     AB_Improved   22  |  28    25  |  25    19  |  31    21  |  29  
--------------------------------------------------------------------------
           Win Rate:      72.9%        69.4%        66.6%        66.0%    
Snapshot saved to /tmp/notebooks.pstat

Process finished with exit code 0



*****************************************************************************


/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-19--0415_tour_combined_2000_10000_500.txt

root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master# python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   Comb2000     Comb10000    Comb_500   
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      92  |   8    96  |   4    89  |  11    93  |   7  
    2       MM_Open     77  |  23    79  |  21    79  |  21    66  |  34  
    3      MM_Center    86  |  14    88  |  12    85  |  15    83  |  17  
    4     MM_Improved   73  |  27    76  |  24    70  |  30    68  |  32  
    5       AB_Open     56  |  44    54  |  46    51  |  49    54  |  46  
    6      AB_Center    54  |  46    60  |  40    55  |  45    59  |  41  
    7     AB_Improved   48  |  52    50  |  50    48  |  52    48  |  52  
--------------------------------------------------------------------------
           Win Rate:      69.4%        71.9%        68.1%        67.3%    
root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master# 



*****************************************************************************


/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-19--0622_tour_combined_2000_3000_1000.txt
root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master# python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   Comb2000     Comb3000     Comb_1000  
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      49  |   1    48  |   2    47  |   3    45  |   5  
    2       MM_Open     38  |  12    36  |  14    36  |  14    39  |  11  
    3      MM_Center    40  |  10    45  |   5    43  |   7    42  |   8  
    4     MM_Improved   40  |  10    33  |  17    35  |  15    35  |  15  
    5       AB_Open     26  |  24    27  |  23    29  |  21    27  |  23  
    6      AB_Center    33  |  17    34  |  16    28  |  22    28  |  22  
    7     AB_Improved   25  |  25    29  |  21    22  |  28    25  |  25  
--------------------------------------------------------------------------
           Win Rate:      71.7%        72.0%        68.6%        68.9%    
root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master# 



*****************************************************************************



/home/gert/Desktop/notebooks/AIND-P2-isolation/Tournament_output/
2018-03-19--0735_tour_combined_1op_5k-1op_20k-1op_10k.txt

root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master
# python tournament.py 

This script evaluates the performance of the custom_score evaluation
function against a baseline agent using alpha-beta search and iterative
deepening (ID) called `AB_Improved`. The three `AB_Custom` agents use
ID and alpha-beta search with the custom_score functions defined in
game_agent.py.

                        *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved  Com_1op_5k   Com_1op_20k  Com_1op_10k 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       Random      49  |   1    48  |   2    48  |   2    46  |   4  
    2       MM_Open     38  |  12    38  |  12    36  |  14    38  |  12  
    3      MM_Center    41  |   9    46  |   4    42  |   8    43  |   7  
    4     MM_Improved   34  |  16    36  |  14    41  |   9    32  |  18  
    5       AB_Open     27  |  23    26  |  24    26  |  24    28  |  22  
    6      AB_Center    29  |  21    33  |  17    27  |  23    22  |  28  
    7     AB_Improved   22  |  28    24  |  26    24  |  26    27  |  23  
--------------------------------------------------------------------------
           Win Rate:      68.6%        71.7%        69.7%        67.4%    
root@80e8767fac2a:/notebooks/AIND-P2-isolation/AIND-Isolation-master# 

